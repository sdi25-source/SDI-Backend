package com.sdi.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CustomisationLevelAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCustomisationLevelAllPropertiesEquals(CustomisationLevel expected, CustomisationLevel actual) {
        assertCustomisationLevelAutoGeneratedPropertiesEquals(expected, actual);
        assertCustomisationLevelAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCustomisationLevelAllUpdatablePropertiesEquals(CustomisationLevel expected, CustomisationLevel actual) {
        assertCustomisationLevelUpdatableFieldsEquals(expected, actual);
        assertCustomisationLevelUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCustomisationLevelAutoGeneratedPropertiesEquals(CustomisationLevel expected, CustomisationLevel actual) {
        assertThat(actual)
            .as("Verify CustomisationLevel auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCustomisationLevelUpdatableFieldsEquals(CustomisationLevel expected, CustomisationLevel actual) {
        assertThat(actual)
            .as("Verify CustomisationLevel relevant properties")
            .satisfies(a -> assertThat(a.getLevel()).as("check level").isEqualTo(expected.getLevel()))
            .satisfies(a -> assertThat(a.getCreateDate()).as("check createDate").isEqualTo(expected.getCreateDate()))
            .satisfies(a -> assertThat(a.getUpdateDate()).as("check updateDate").isEqualTo(expected.getUpdateDate()))
            .satisfies(a -> assertThat(a.getNotes()).as("check notes").isEqualTo(expected.getNotes()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCustomisationLevelUpdatableRelationshipsEquals(CustomisationLevel expected, CustomisationLevel actual) {
        // empty method
    }
}
