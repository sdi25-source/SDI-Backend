package com.sdi.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class InfraComponentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInfraComponentAllPropertiesEquals(InfraComponent expected, InfraComponent actual) {
        assertInfraComponentAutoGeneratedPropertiesEquals(expected, actual);
        assertInfraComponentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInfraComponentAllUpdatablePropertiesEquals(InfraComponent expected, InfraComponent actual) {
        assertInfraComponentUpdatableFieldsEquals(expected, actual);
        assertInfraComponentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInfraComponentAutoGeneratedPropertiesEquals(InfraComponent expected, InfraComponent actual) {
        assertThat(actual)
            .as("Verify InfraComponent auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInfraComponentUpdatableFieldsEquals(InfraComponent expected, InfraComponent actual) {
        assertThat(actual)
            .as("Verify InfraComponent relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getVendor()).as("check vendor").isEqualTo(expected.getVendor()))
            .satisfies(a -> assertThat(a.getNotes()).as("check notes").isEqualTo(expected.getNotes()))
            .satisfies(a -> assertThat(a.getCreateDate()).as("check createDate").isEqualTo(expected.getCreateDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInfraComponentUpdatableRelationshipsEquals(InfraComponent expected, InfraComponent actual) {
        assertThat(actual)
            .as("Verify InfraComponent relationships")
            .satisfies(a -> assertThat(a.getComponentType()).as("check componentType").isEqualTo(expected.getComponentType()))
            .satisfies(a -> assertThat(a.getProductVersions()).as("check productVersions").isEqualTo(expected.getProductVersions()));
    }
}
