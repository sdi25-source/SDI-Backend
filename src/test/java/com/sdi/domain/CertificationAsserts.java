package com.sdi.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CertificationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCertificationAllPropertiesEquals(Certification expected, Certification actual) {
        assertCertificationAutoGeneratedPropertiesEquals(expected, actual);
        assertCertificationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCertificationAllUpdatablePropertiesEquals(Certification expected, Certification actual) {
        assertCertificationUpdatableFieldsEquals(expected, actual);
        assertCertificationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCertificationAutoGeneratedPropertiesEquals(Certification expected, Certification actual) {
        assertThat(actual)
            .as("Verify Certification auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCertificationUpdatableFieldsEquals(Certification expected, Certification actual) {
        assertThat(actual)
            .as("Verify Certification relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getCreateDate()).as("check createDate").isEqualTo(expected.getCreateDate()))
            .satisfies(a -> assertThat(a.getUpdateDate()).as("check updateDate").isEqualTo(expected.getUpdateDate()))
            .satisfies(a -> assertThat(a.getExpireDate()).as("check expireDate").isEqualTo(expected.getExpireDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCertificationUpdatableRelationshipsEquals(Certification expected, Certification actual) {
        // empty method
    }
}
