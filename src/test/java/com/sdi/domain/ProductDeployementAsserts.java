package com.sdi.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProductDeployementAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductDeployementAllPropertiesEquals(ProductDeployement expected, ProductDeployement actual) {
        assertProductDeployementAutoGeneratedPropertiesEquals(expected, actual);
        assertProductDeployementAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductDeployementAllUpdatablePropertiesEquals(ProductDeployement expected, ProductDeployement actual) {
        assertProductDeployementUpdatableFieldsEquals(expected, actual);
        assertProductDeployementUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductDeployementAutoGeneratedPropertiesEquals(ProductDeployement expected, ProductDeployement actual) {
        assertThat(actual)
            .as("Verify ProductDeployement auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductDeployementUpdatableFieldsEquals(ProductDeployement expected, ProductDeployement actual) {
        assertThat(actual)
            .as("Verify ProductDeployement relevant properties")
            .satisfies(a -> assertThat(a.getRefContract()).as("check refContract").isEqualTo(expected.getRefContract()))
            .satisfies(a -> assertThat(a.getCreateDate()).as("check createDate").isEqualTo(expected.getCreateDate()))
            .satisfies(a -> assertThat(a.getUpdateDate()).as("check updateDate").isEqualTo(expected.getUpdateDate()))
            .satisfies(a -> assertThat(a.getNotes()).as("check notes").isEqualTo(expected.getNotes()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductDeployementUpdatableRelationshipsEquals(ProductDeployement expected, ProductDeployement actual) {
        assertThat(actual)
            .as("Verify ProductDeployement relationships")
            .satisfies(a -> assertThat(a.getClient()).as("check client").isEqualTo(expected.getClient()));
    }
}
