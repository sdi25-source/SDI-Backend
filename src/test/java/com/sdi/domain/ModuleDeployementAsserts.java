package com.sdi.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ModuleDeployementAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertModuleDeployementAllPropertiesEquals(ModuleDeployement expected, ModuleDeployement actual) {
        assertModuleDeployementAutoGeneratedPropertiesEquals(expected, actual);
        assertModuleDeployementAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertModuleDeployementAllUpdatablePropertiesEquals(ModuleDeployement expected, ModuleDeployement actual) {
        assertModuleDeployementUpdatableFieldsEquals(expected, actual);
        assertModuleDeployementUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertModuleDeployementAutoGeneratedPropertiesEquals(ModuleDeployement expected, ModuleDeployement actual) {
        assertThat(actual)
            .as("Verify ModuleDeployement auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertModuleDeployementUpdatableFieldsEquals(ModuleDeployement expected, ModuleDeployement actual) {
        assertThat(actual)
            .as("Verify ModuleDeployement relevant properties")
            .satisfies(a -> assertThat(a.getCode()).as("check code").isEqualTo(expected.getCode()))
            .satisfies(a -> assertThat(a.getNotes()).as("check notes").isEqualTo(expected.getNotes()))
            .satisfies(a -> assertThat(a.getCreateDate()).as("check createDate").isEqualTo(expected.getCreateDate()))
            .satisfies(a -> assertThat(a.getUpdateDate()).as("check updateDate").isEqualTo(expected.getUpdateDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertModuleDeployementUpdatableRelationshipsEquals(ModuleDeployement expected, ModuleDeployement actual) {
        assertThat(actual)
            .as("Verify ModuleDeployement relationships")
            .satisfies(a -> assertThat(a.getModuleVersion()).as("check moduleVersion").isEqualTo(expected.getModuleVersion()))
            .satisfies(a ->
                assertThat(a.getProductDeployementDetail())
                    .as("check productDeployementDetail")
                    .isEqualTo(expected.getProductDeployementDetail())
            );
    }
}
