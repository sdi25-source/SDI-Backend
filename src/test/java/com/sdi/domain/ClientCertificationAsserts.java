package com.sdi.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ClientCertificationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClientCertificationAllPropertiesEquals(ClientCertification expected, ClientCertification actual) {
        assertClientCertificationAutoGeneratedPropertiesEquals(expected, actual);
        assertClientCertificationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClientCertificationAllUpdatablePropertiesEquals(ClientCertification expected, ClientCertification actual) {
        assertClientCertificationUpdatableFieldsEquals(expected, actual);
        assertClientCertificationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClientCertificationAutoGeneratedPropertiesEquals(ClientCertification expected, ClientCertification actual) {
        assertThat(actual)
            .as("Verify ClientCertification auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClientCertificationUpdatableFieldsEquals(ClientCertification expected, ClientCertification actual) {
        assertThat(actual)
            .as("Verify ClientCertification relevant properties")
            .satisfies(a -> assertThat(a.getCertification()).as("check certification").isEqualTo(expected.getCertification()))
            .satisfies(a -> assertThat(a.getCertificationDate()).as("check certificationDate").isEqualTo(expected.getCertificationDate()))
            .satisfies(a -> assertThat(a.getCreateDate()).as("check createDate").isEqualTo(expected.getCreateDate()))
            .satisfies(a -> assertThat(a.getUpdateDate()).as("check updateDate").isEqualTo(expected.getUpdateDate()))
            .satisfies(a -> assertThat(a.getNotes()).as("check notes").isEqualTo(expected.getNotes()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClientCertificationUpdatableRelationshipsEquals(ClientCertification expected, ClientCertification actual) {
        assertThat(actual)
            .as("Verify ClientCertification relationships")
            .satisfies(a -> assertThat(a.getClient()).as("check client").isEqualTo(expected.getClient()))
            .satisfies(a -> assertThat(a.getCertif()).as("check certif").isEqualTo(expected.getCertif()));
    }
}
