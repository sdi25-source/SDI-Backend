package com.sdi.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProductLineAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductLineAllPropertiesEquals(ProductLine expected, ProductLine actual) {
        assertProductLineAutoGeneratedPropertiesEquals(expected, actual);
        assertProductLineAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductLineAllUpdatablePropertiesEquals(ProductLine expected, ProductLine actual) {
        assertProductLineUpdatableFieldsEquals(expected, actual);
        assertProductLineUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductLineAutoGeneratedPropertiesEquals(ProductLine expected, ProductLine actual) {
        assertThat(actual)
            .as("Verify ProductLine auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductLineUpdatableFieldsEquals(ProductLine expected, ProductLine actual) {
        assertThat(actual)
            .as("Verify ProductLine relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getCreateDate()).as("check createDate").isEqualTo(expected.getCreateDate()))
            .satisfies(a -> assertThat(a.getUpdateDate()).as("check updateDate").isEqualTo(expected.getUpdateDate()))
            .satisfies(a -> assertThat(a.getNotes()).as("check notes").isEqualTo(expected.getNotes()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductLineUpdatableRelationshipsEquals(ProductLine expected, ProductLine actual) {
        assertThat(actual)
            .as("Verify ProductLine relationships")
            .satisfies(a -> assertThat(a.getProducts()).as("check products").isEqualTo(expected.getProducts()));
    }
}
