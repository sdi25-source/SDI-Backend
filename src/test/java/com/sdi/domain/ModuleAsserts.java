package com.sdi.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ModuleAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertModuleAllPropertiesEquals(Module expected, Module actual) {
        assertModuleAutoGeneratedPropertiesEquals(expected, actual);
        assertModuleAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertModuleAllUpdatablePropertiesEquals(Module expected, Module actual) {
        assertModuleUpdatableFieldsEquals(expected, actual);
        assertModuleUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertModuleAutoGeneratedPropertiesEquals(Module expected, Module actual) {
        assertThat(actual)
            .as("Verify Module auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertModuleUpdatableFieldsEquals(Module expected, Module actual) {
        assertThat(actual)
            .as("Verify Module relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getCreateDate()).as("check createDate").isEqualTo(expected.getCreateDate()))
            .satisfies(a -> assertThat(a.getUpdateDate()).as("check updateDate").isEqualTo(expected.getUpdateDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertModuleUpdatableRelationshipsEquals(Module expected, Module actual) {
        // empty method
    }
}
