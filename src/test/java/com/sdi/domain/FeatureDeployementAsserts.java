package com.sdi.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FeatureDeployementAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFeatureDeployementAllPropertiesEquals(FeatureDeployement expected, FeatureDeployement actual) {
        assertFeatureDeployementAutoGeneratedPropertiesEquals(expected, actual);
        assertFeatureDeployementAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFeatureDeployementAllUpdatablePropertiesEquals(FeatureDeployement expected, FeatureDeployement actual) {
        assertFeatureDeployementUpdatableFieldsEquals(expected, actual);
        assertFeatureDeployementUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFeatureDeployementAutoGeneratedPropertiesEquals(FeatureDeployement expected, FeatureDeployement actual) {
        assertThat(actual)
            .as("Verify FeatureDeployement auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFeatureDeployementUpdatableFieldsEquals(FeatureDeployement expected, FeatureDeployement actual) {
        assertThat(actual)
            .as("Verify FeatureDeployement relevant properties")
            .satisfies(a -> assertThat(a.getCode()).as("check code").isEqualTo(expected.getCode()))
            .satisfies(a -> assertThat(a.getCreateDate()).as("check createDate").isEqualTo(expected.getCreateDate()))
            .satisfies(a -> assertThat(a.getUpdateDate()).as("check updateDate").isEqualTo(expected.getUpdateDate()))
            .satisfies(a -> assertThat(a.getNotes()).as("check notes").isEqualTo(expected.getNotes()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFeatureDeployementUpdatableRelationshipsEquals(FeatureDeployement expected, FeatureDeployement actual) {
        assertThat(actual)
            .as("Verify FeatureDeployement relationships")
            .satisfies(a -> assertThat(a.getFeature()).as("check feature").isEqualTo(expected.getFeature()))
            .satisfies(a -> assertThat(a.getModuleDeployement()).as("check moduleDeployement").isEqualTo(expected.getModuleDeployement()));
    }
}
